# Zonneaccu Project - Volgende Ontwikkelstappen

## Must-haves

1. **Basisprojectstructuur opzetten** [AFGEROND - PR #2]
   - Mappenstructuur aanmaken
   - .gitignore configureren
   - Requirements definiëren

2. **Data inleesmodule implementeren (data_loader.py)** [AFGEROND - PR #4]
   - CSV inleesfunctionaliteit
   - Datavalidatie en -normalisatie
   - Basisstatistieken genereren
   - UI-component voor data import

3. **Data analyse module implementeren (data_analysis.py)** [AFGEROND - PR #6]
   - Geavanceerde data-analyse functies
   - Patronen herkennen in energieproductie en -verbruik
   - Visualisatiecomponenten voor data-analyse
   - UI-component voor interactieve data analyse

4. **Warmwaterboiler Module (boiler_module.py)** [AFGEROND - PR #8]
   - Berekeningen voor energieopslag in warmwaterboiler
   - Parameters definiëren (gasprijs, boilervolume, waterverbruik etc.)
   - Besparingsanalyse implementeren
   - UI-component voor boiler analyse

5. **Accu Module (battery_module.py)** [AFGEROND - PR #10]
   - Berekeningen voor energieopslag in accu
   - Parameters definiëren (accucapaciteit, efficiëntie, etc.)
   - Besparingsanalyse implementeren
   - UI-component voor accu analyse

6. **Vergelijkingsmodule** [OPEN]
   - Vergelijking tussen verschillende opslagmethoden
   - Kosten-batenanalyse
   - Terugverdientijdberekeningen

7. **Config en sessiemanagement** [OPEN]
   - Opslaan en laden van gebruikersvoorkeuren
   - Sessiemanagement voor meerdere gebruikers

## Nice-to-haves

1. **Geavanceerde data-analyse**
   - Voorspellingsmodellen voor toekomstig verbruik/productie
   - Machine learning voor patroonherkenning

2. **Uitgebreide visualisaties**
   - Meer interactieve grafieken
   - Vergelijkingsvisualisaties tussen verschillende opslagmethoden

3. **Aanvullende opslagmodules**
   - Opslag via waterstof
   - Combinatie van verschillende opslagmethoden

4. **Exportfunctionaliteit**
   - Rapporten genereren (PDF)
   - Data exporteren voor verdere analyse

5. **Gebruiksscenario's**
   - Simulatie van verschillende gebruiksscenario's
   - "What-if" analyses

## Volgende stap
De volgende stap is het verbeteren van de **Vergelijkingsmodule** in app.py. Hoewel er al een eenvoudige vergelijking is geïmplementeerd tussen de boiler en accu modules, kan deze verder worden uitgebreid met meer gedetailleerde vergelijkingen, zoals:

1. Vergelijking van verschillende capaciteiten en configuraties
2. Gecombineerde opslagscenario's (boiler + accu)
3. Gevoeligheidsanalyse voor verschillende energieprijzen
4. Uitgebreidere visualisaties voor vergelijking

Daarnaast kan de **Config en sessiemanagement** module worden geïmplementeerd om gebruikersvoorkeuren op te slaan en te laden, zodat gebruikers niet elke keer alle parameters opnieuw hoeven in te stellen.

De vervolgstappen die noodzakelijk zijn voor de basiswerking van de applicatie zijn alleen de must-haves. De nice-to-haves zijn aanvullende functionaliteiten die de applicatie verder kunnen verbeteren nadat de kernfunctionaliteit is geïmplementeerd. De kernfunctionaliteit van de applicatie is nu grotendeels geïmplementeerd, met de belangrijkste opslagmodules (boiler en accu) volledig functioneel. De resterende must-haves (vergelijkingsmodule en config management) zijn verbeteringen die de gebruikerservaring verbeteren, maar de applicatie is al bruikbaar in zijn huidige vorm.
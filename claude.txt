# Zonneaccu Projectoverzicht

## 1. Projectoverzicht
Dit project richt zich op het analyseren van zonnepaneel productiedata en het berekenen van potentiële besparingen door overproductie op te slaan. Het doel is verschillende opslagmethoden te evalueren (zoals een warmwaterboiler en accu) om te bepalen welke het meest rendabel en haalbaar is voor gebruik in een woning.

## 2. Architectuur
Het project is opgezet als een Streamlit webapplicatie met een modulaire structuur:

- **data_processing**: Modules voor het inlezen, verwerken en analyseren van de historische energiedata
- **storage_modules**: Verschillende implementaties voor energieopslagberekeningen
- **ui_components**: Herbruikbare UI-componenten voor de Streamlit interface
- **utils**: Algemene hulpfuncties en configuratiebeheer
- **app.py**: Hoofdapplicatie die alles samenvoegt

## 3. Modulestatus

### Data Processing
- **data_loader.py**: Functionaliteit voor het laden, valideren en voorbewerken van CSV-data met historische energieproductie en -verbruik
  - Status: Geïmplementeerd
  - Afhankelijkheid: Geen
  - Functionaliteit: CSV-import, datavalidatie, resampling, afgeleide waarden berekenen, basisstatistieken genereren

- **data_analysis.py**: Analyse van de geladen data (patronen, statistieken, visualisaties) 
  - Status: Geïmplementeerd
  - Afhankelijkheid: data_loader.py
  - Functionaliteit: Patroonherkenning, statistische analyse, visualisaties, opslagsimulatie, outlier detectie

### Storage Modules
- **boiler_module.py**: Berekeningen voor warmwaterboiler opslag
  - Status: Geïmplementeerd
  - Afhankelijkheid: data_loader.py, data_analysis.py
  - Functionaliteit: Boilermodel, energieopslagcapaciteit, warmteverliezen, simulatie, financiële analyse

- **battery_module.py**: Berekeningen voor accu opslag
  - Status: Geïmplementeerd
  - Afhankelijkheid: data_loader.py, data_analysis.py
  - Functionaliteit: Accumodel, energieopslagcapaciteit, laad/ontlaadverliezen, degradatie, simulatie, financiële analyse

### UI Components
- **data_import_page.py**: UI-component voor het importeren en voorbewerken van data
  - Status: Geïmplementeerd
  - Afhankelijkheid: data_loader.py
  - Functionaliteit: Bestandsupload, voorbeelddata, datavalidatie, preprocessing opties, statistieken weergave

- **data_analysis_page.py**: UI-component voor het analyseren en visualiseren van energiedata
  - Status: Geïmplementeerd
  - Afhankelijkheid: data_loader.py, data_analysis.py
  - Functionaliteit: Tijdreeksvisualisatie, patroonanalyse, energiebalans, opslagpotentieel, outlier analyse

- **boiler_analysis_page.py**: UI-component voor het analyseren van warmwaterboiler opslag
  - Status: Geïmplementeerd
  - Afhankelijkheid: data_loader.py, data_analysis.py, boiler_module.py
  - Functionaliteit: Boilerconfiguratie, simulatie, energiestromen, financiële analyse, optimalisatie

- **battery_analysis_page.py**: UI-component voor het analyseren van accu opslag
  - Status: Geïmplementeerd
  - Afhankelijkheid: data_loader.py, data_analysis.py, battery_module.py
  - Functionaliteit: Accuconfiguratie, simulatie, energiestromen, financiële analyse, optimalisatie

- **config_page.py**: UI-component voor het beheren van configuraties
  - Status: Geïmplementeerd (PR #13)
  - Afhankelijkheid: utils/config_manager.py
  - Functionaliteit: Configuratieprofielen opslaan/laden, exporteren/importeren, configuratie-editor

- **navigation.py**: Navigatiestructuur voor de applicatie
  - Status: Geïntegreerd in app.py
  - Afhankelijkheid: Geen

- **input_forms.py**: Herbruikbare invoercomponenten
  - Status: Geïntegreerd in individuele pagina's
  - Afhankelijkheid: Geen

- **visualization.py**: Visualisatiecomponenten voor de data en resultaten
  - Status: Vervangen door functionaliteit in data_analysis.py
  - Afhankelijkheid: data_analysis.py

### Utils
- **config_manager.py**: Beheer van gebruikersconfiguratie en variabelen
  - Status: Geïmplementeerd (PR #13)
  - Afhankelijkheid: Geen
  - Functionaliteit: Configuratieprofielen opslaan/laden, validatie, import/export, standaardwaarden

### Hoofdapplicatie
- **app.py**: Streamlit hoofdapplicatie die alle modules samenbrengt
  - Status: Geïmplementeerd, bijgewerkt voor alle analyse pagina's en configuratiebeheer
  - Afhankelijkheid: Alle bovenstaande modules
  - Functionaliteit: Navigatie, pagina's renderen, sessiemanagement, vergelijking van opslagmethoden, configuratiebeheer